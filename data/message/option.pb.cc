// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: option.proto

#include "option.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace hdcs {
namespace networking {
}  // namespace networking
}  // namespace hdcs
namespace protobuf_option_2eproto {
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "option.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014option.proto\022\017hdcs.networking\032 google/"
      "protobuf/descriptor.proto*}\n\014CompressTyp"
      "e\022\024\n\020CompressTypeNone\020\000\022\024\n\020CompressTypeG"
      "zip\020\001\022\024\n\020CompressTypeZlib\020\002\022\026\n\022CompressT"
      "ypeSnappy\020\003\022\023\n\017CompressTypeLZ4\020\004:A\n\017serv"
      "ice_timeout\022\037.google.protobuf.ServiceOpt"
      "ions\030\240\234\001 \001(\003:\00510000:8\n\016method_timeout\022\036."
      "google.protobuf.MethodOptions\030\240\234\001 \001(\003:p\n"
      "\025request_compress_type\022\036.google.protobuf"
      ".MethodOptions\030\241\234\001 \001(\0162\035.hdcs.networking"
      ".CompressType:\020CompressTypeNone:q\n\026respo"
      "nse_compress_type\022\036.google.protobuf.Meth"
      "odOptions\030\242\234\001 \001(\0162\035.hdcs.networking.Comp"
      "ressType:\020CompressTypeNone"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 546);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "option.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_option_2eproto
namespace hdcs {
namespace networking {
const ::google::protobuf::EnumDescriptor* CompressType_descriptor() {
  protobuf_option_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_option_2eproto::file_level_enum_descriptors[0];
}
bool CompressType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  service_timeout(kServiceTimeoutFieldNumber, GOOGLE_LONGLONG(10000));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int64 >, 3, false >
  method_timeout(kMethodTimeoutFieldNumber, GOOGLE_LONGLONG(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::hdcs::networking::CompressType, ::hdcs::networking::CompressType_IsValid>, 14, false >
  request_compress_type(kRequestCompressTypeFieldNumber, static_cast< ::hdcs::networking::CompressType >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::hdcs::networking::CompressType, ::hdcs::networking::CompressType_IsValid>, 14, false >
  response_compress_type(kResponseCompressTypeFieldNumber, static_cast< ::hdcs::networking::CompressType >(0));

// @@protoc_insertion_point(namespace_scope)
}  // namespace networking
}  // namespace hdcs

// @@protoc_insertion_point(global_scope)
